// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    // Get build number from CI
    def buildNumber = 0
    if (System.getenv().CI_PIPELINE_ID) {
        buildNumber = System.getenv().CI_PIPELINE_ID?.toInteger()
    }
    project.ext.buildNumber = buildNumber

    project.ext.sdkVersionName = "0.3.0"
    project.ext.appVersionName = "${project.sdkVersionName}.${project.buildNumber}"
    project.ext.versionCode = 9
    project.ext.groupId = "at.bluesource.choicesdk"

    ext.kotlin_version = "1.5.21"
    ext.coroutines_version = "1.5.1"
    ext.ktlint_version = "0.42.0"
    ext.core_ktx_version = "1.6.0"
    ext.rxjava_version = "3.0.13"
    ext.rxandroid_version = "3.0.0"
    ext.rxrelay_version = "3.0.1"

    ext.firebase_bom_version = "28.3.0"

    repositories {
        google()
        gradlePluginPortal()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://developer.huawei.com/repo/' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'com.jaredsburrows:gradle-license-plugin:0.8.80'

        // GMS
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'

        // HMS
        classpath 'com.huawei.agconnect:agcp:1.5.2.300'

        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'

    }
}

plugins {
    id("org.jetbrains.dokka") version "1.4.0"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

allprojects {
    repositories {
        google()
        gradlePluginPortal()

        maven { url 'https://developer.huawei.com/repo/' }

        maven {
            name "Gitlab"
            url "https://gitlab.bluesource.at/api/v4/projects/512/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = 'Deploy-Token'
                value = "$System.env.CHOICESDK_DEMO_GITLAB_TOKEN"
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//nexusPublishing {
//    packageGroup = project.groupId
//    repositories {
//        sonatype {
//            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
//            stagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID")
//            username = System.getenv("SONATYPE_USERNAME")
//            password = System.getenv("SONATYPE_PASSWORD")
//        }
//    }
//}
